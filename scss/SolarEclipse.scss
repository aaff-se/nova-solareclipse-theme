@import "settings/_colors.scss";

meta {
  -theme-interface-style: dark;
  -theme-vibrancy: false;
  -theme-accent-color: auto;
}

/*
 * Window styles
 */
meta.window {
  background-color: $background;
  border-color: $background-darker;
}
meta.titlebar {
  color: $white;
  background: $background;
  border-color: $background-lighter;
}
meta.titlebar.inactive {
  background-color: $background-darker;
}

meta.button {
  background: $background;
  border: $green;
  color: $green;
}
meta.button.highlighted {
  background: $green;
  border: $green;
  color: $background;
}
meta.button.selected {
  background: $background;
  border: $white;
  color: $white;
}
meta.button.highlighted.selected {
  background: $green;
  border: $white;
  color: $white;
}
meta.button.disabled {
  background: $background;
  border: $grey;
  color: $grey;
}

meta.textfield {
  background-color: $white;
  border-color: $grey;
}

meta.accent {
  color: $green;
}

/*
 * Document styles
 */
meta.document {
  background-color: $background;
  border-color: $background-lighter;
}

// meta.document.button {
//   background: linear-gradient(hsb(210, 10%, 26%), hsb(210, 10%, 22%));
//   border: linear-gradient(hsb(210, 10%, 12%), hsb(210, 10%, 8%));
// }
// meta.document.button.disabled {
//   background: linear-gradient(
//     hsba(220, 10%, 26%, 0.3),
//     hsba(220, 10%, 22%, 0.3)
//   );
// }
// meta.document.button.highlighted {
//   background: linear-gradient(hsb(210, 10%, 36%), hsb(210, 10%, 32%));
// }
//
// meta.document.textfield {
//   background-color: hsb(210, 10%, 10%);
//   border-color: hsb(210, 10%, 6%);
// }

/* Text */
meta.text {
  color: $white;
}
meta.text.invisible {
  color: $background-lighter;
}
meta.text.selected {
  background-color: $background-lighter;
}

/* Cursor */
meta.cursor {
  background-color: $background-darker;
}

/* Indentation Guides */
meta.indentguide {
  border-color: $background-lighter;
}

/* Gutter */
meta.gutter {
  color: $grey;
}
meta.gutter.selected {
  background-color: $background-lighter;
  color: hsb(210, 10%, 80%);
}

/*
 * Syntax styles
 */

keyword {
  color: $orange;
}
comment {
  color: $grey;
}
processing {
  color: $grey;
}
declaration {
  color: $grey;
}
bracket {
  color: $yellow;
}
operator {
  color: $yellow;
}
invalid {
  color: $red;
}
link {
  color: $purple;
}

/* Values */
value.boolean {
  color: $orange;
}
value.null {
  color: $grey;
}
value.number {
  color: $pink;
}
value.entity {
  color: $blue;
}
value.symbol {
  color: $orange;
}

/* Identifiers */
identifier.type {
  color: $yellow;
}
identifier.constant {
  color: $white;
}
identifier.global {
  color: $orange;
}
identifier.variable {
  color: $blue;
}
identifier.property,
identifier.decorator,
identifier.function,
identifier.method {
  color: $white;
}
identifier.key {
  color: $orange;
}
identifier.argument {
  color: $blue;
}

/* Strings */
string {
  color: $green;
}
string.key {
  color: $white;
}
string-template {
  color: $green;
}
string-template.value {
  color: $white;
}
regex {
  color: $red;
}
regex.escaped {
  color: $red;
}
cdata {
  color: $red;
}

/* Markup */
markup.heading {
  color: $red;
}
markup.line {
  color: $yellow;
}
markup.bold {
  color: $white;
  font-weight: bold;
}
markup.italic {
  color: $white;
  font-style: italic;
}
markup.strikethrough {
  color: $grey;
}
markup.list.item {
  color: $orange;
}
markup.code {
  color: $green;
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
  font-weight: bold;
  color: $yellow;
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
  color: $white;
}

/* Tags */
tag {
  color: $blue;
}
tag.framework {
  color: $grey;
}
tag.attribute.name {
  color: $white;
}
tag.attribute.value {
  color: $green;
}
tag.attribute.value.link {
  color: $purple;
}

/* Styles */
style {
  color: $white;
}
style.at {
  color: $orange;
  font-weight: bold;
}
style.selector.element {
  font-weight: bold;
  color: $white;
}
style.selector.identifier.id {
  color: $red;
}
style.selector.identifier.class {
  color: $white;
}
style.selector.pseudoclass {
  color: $yellow;
}
style.selector.pseudoelement {
  color: $yellow;
}
style.attribute.name {
  color: $orange;
}
style.value.number {
  color: $pink;
}
style.value.color.hex {
  color: $blue;
}
style.value.keyword {
  color: $yellow;
}
style.value.color.named {
  color: $yellow;
}
